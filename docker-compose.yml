services:
  # Frontend service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - ingestion
      - aggregator
      - leaderboard
      - alerts
      - rationality
    environment:
      - NODE_ENV=development

  # Backend services
  # Ensure you have a .env file in the project root with:
  # SUPABASE_DB_URL=your_supabase_connection_string
  # SUPABASE_ANON_KEY=your_supabase_anon_key
  # SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

  ingestion:
    build:
      context: ./backend
      dockerfile: ingestion/Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
    env_file:
      - .env # Load Supabase credentials

  aggregator:
    build:
      context: ./backend
      dockerfile: aggregator/Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./backend:/app
    env_file:
      - .env # Load Supabase credentials

  leaderboard:
    build:
      context: ./backend
      dockerfile: leaderboard/Dockerfile
    ports:
      - "8003:8003"
    volumes:
      - ./backend:/app
    env_file:
      - .env # Load Supabase credentials

  alerts:
    build:
      context: ./backend
      dockerfile: alerts/Dockerfile
    ports:
      - "8004:8004"
    volumes:
      - ./backend:/app
    env_file:
      - .env # Load Supabase credentials
    environment:
      # Keep mailhog settings if needed for local testing
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025

  rationality:
    build:
      context: ./backend
      dockerfile: rationality/Dockerfile
    ports:
      - "8005:8005"
    volumes:
      - ./backend:/app
    env_file:
      - .env # Load Supabase credentials

  # Mail service for testing (optional, keep if alerts service uses it locally)
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI

volumes: